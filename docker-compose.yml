# V2 POC Docker Compose - 5 Core Containers
version: '3.8'

services:
  # 1. FastAPI Application with BGE-large embeddings
  app:
    build: .
    container_name: v2-poc-app
    restart: unless-stopped
    environment:
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DATABASE_URL=postgresql://pocuser:pocpass@postgres:5432/poc_db
      - REDIS_URL=redis://redis:6379
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - MINIO_SECURE=false
      - APP_ENV=development
      - LOG_LEVEL=INFO
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 2. Nginx Reverse Proxy
  nginx:
    image: nginx:1.25-alpine
    container_name: v2-poc-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # 3. PostgreSQL with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    container_name: v2-poc-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=pocuser
      - POSTGRES_PASSWORD=pocpass
      - POSTGRES_DB=poc_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pocuser -d poc_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: >
      postgres
      -c shared_preload_libraries='vector'
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

  # 4. MinIO S3-Compatible Storage
  minio:
    image: minio/minio:RELEASE.2024-12-13T22-06-12Z
    container_name: v2-poc-minio
    restart: unless-stopped
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 30s

  # 5. Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: v2-poc-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  redis_data:
    driver: local

# Network for container communication
networks:
  default:
    name: v2-poc-network