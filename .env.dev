# V2 POC Environment Configuration Template
# Copy this file to .env and update with your actual values

# ====================================
# AI SERVICE CONFIGURATION
# ====================================

# OpenRouter API Configuration
OPENROUTER_API_KEY=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
OPENROUTER_BASE_URL=https://openrouter.ai/api/v1
DEFAULT_MODEL=openai/gpt-5-nano

# Alternative AI Provider (Optional)
# AZURE_OPENAI_ENDPOINT=https://your-endpoint.openai.azure.com/
# AZURE_OPENAI_API_KEY=your-azure-api-key
# AZURE_OPENAI_DEPLOYMENT_NAME=gpt-4

# ====================================
# DATABASE CONFIGURATION
# ====================================

# PostgreSQL Configuration - Local Development (Docker Network)
POSTGRES_USER=pocuser
POSTGRES_PASSWORD=pocpass
POSTGRES_DB=poc_dev
# For local development - use Docker container name
DATABASE_URL=postgresql://pocuser:pocpass@postgres:5432/poc_dev
# For external access from host machine - use localhost
# DATABASE_URL=postgresql://pocuser:pocpass@localhost:5432/poc_dev

# MongoDB Configuration - Local Development (Docker Network)
MONGO_INITDB_ROOT_USERNAME=mongoadmin
MONGO_INITDB_ROOT_PASSWORD=mongopass123
MONGO_INITDB_DATABASE=poc_mongo_db
# For local development - use Docker container name
# MONGODB_URL=mongodb://mongoadmin:mongopass123@mongodb:27017/poc_mongo_db
# For external access from host machine - use localhost
MONGODB_URL=mongodb://mongoadmin:mongopass123@localhost:27017/poc_mongo_db

# Redis Configuration - Local Development (Docker Network)
# For local development - use Docker container name
# REDIS_URL=redis://redis:6379
# For external access from host machine - use localhost
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=devpass

# ====================================
# OBJECT STORAGE CONFIGURATION
# ====================================

# MinIO Configuration (S3-compatible) - Local Development (Docker Network)
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin123
# For local development - use Docker container name
# MINIO_ENDPOINT=minio:9000
# For external access from host machine - use localhost
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin123
MINIO_SECURE=false
MINIO_BUCKET_NAME=v2-poc-storage

# ====================================
# APPLICATION CONFIGURATION
# ====================================

# Application Environment - Local Development
APP_ENV=development
LOG_LEVEL=DEBUG
DEBUG=true

# JWT Configuration
JWT_SECRET_KEY=local-dev-jwt-secret-key-change-in-production
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# CORS Configuration
ALLOWED_ORIGINS=http://localhost:3000,https://pocmaster.argentquest.com,http://localhost:8000,http://localhost:8003
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
ALLOWED_HEADERS=*

# Domain Configuration
DOMAIN_NAME=pocmaster.argentquest.com
SSL_EMAIL=admin@argentquest.com

# ====================================
# DEVELOPMENT TOOLS CONFIGURATION
# ====================================

# VS Code Server
VSCODE_PASSWORD=dev123
VSCODE_SUDO_PASSWORD=devsudo123

# Portainer Configuration
PORTAINER_ADMIN_PASSWORD=devportainer123

# ====================================
# WEB UI CREDENTIALS
# ====================================

# pgAdmin Default Login
PGADMIN_DEFAULT_EMAIL=admin@example.com
PGADMIN_DEFAULT_PASSWORD=admin

# Mongo Express Basic Auth
ME_CONFIG_BASICAUTH_USERNAME=admin
ME_CONFIG_BASICAUTH_PASSWORD=admin

# Heimdall Configuration
HEIMDALL_PUID=1000
HEIMDALL_PGID=1000
HEIMDALL_TZ=UTC

# ====================================
# PERFORMANCE & SCALING
# ====================================

# FastAPI Workers (Production)
GUNICORN_WORKERS=4
GUNICORN_WORKER_CLASS=uvicorn.workers.UvicornWorker
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=100

# Database Connection Pools
POSTGRES_MAX_CONNECTIONS=200
REDIS_MAX_CONNECTIONS=100
MONGODB_MAX_POOL_SIZE=50

# Cache Configuration
CACHE_TTL_SECONDS=3600
CACHE_MAX_SIZE_MB=256

# ====================================
# MONITORING & LOGGING
# ====================================

# Logging Configuration
LOG_FORMAT=json
LOG_FILE_PATH=/app/logs/app.log
LOG_MAX_SIZE_MB=100
LOG_BACKUP_COUNT=5

# Metrics Collection
ENABLE_METRICS=true
METRICS_PORT=9090
PROMETHEUS_ENABLED=false

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10
HEALTH_CHECK_RETRIES=3

# ====================================
# SECURITY CONFIGURATION
# ====================================

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60
RATE_LIMIT_BURST=20

# API Security
API_KEY_HEADER=X-API-Key
REQUIRE_API_KEY=false

# Session Configuration
SESSION_TIMEOUT_MINUTES=60
SESSION_CLEANUP_INTERVAL=300

# ====================================
# DEVELOPMENT OVERRIDES
# ====================================

# Development-specific settings (override in .env.development)
DEV_HOT_RELOAD=true
DEV_AUTO_RESTART=true
DEV_DEBUG_SQL=false
DEV_MOCK_AI_RESPONSES=false

# ====================================
# PRODUCTION OVERRIDES
# ====================================

# Production-specific settings (override in .env.production)
PROD_SSL_VERIFY=true
PROD_SECURE_COOKIES=true
PROD_RATE_LIMITING=strict
PROD_LOGGING_LEVEL=WARNING

# ====================================
# BACKUP CONFIGURATION (Future)
# ====================================

# Database Backup Settings
BACKUP_ENABLED=false
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=v2-poc-backups

# ====================================
# EXTERNAL SERVICES (Optional)
# ====================================

# Email Configuration (for notifications)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password
SMTP_USE_TLS=true

# Webhook Configuration
WEBHOOK_SECRET=local-dev-webhook-secret
WEBHOOK_ENABLED=false

# ====================================
# LOCAL DEVELOPMENT NOTES
# ====================================

# This .env file is configured for LOCAL DEVELOPMENT using Docker Network
# 
# Database Connections (Docker Internal):
# - PostgreSQL: postgres:5432 (poc_db)  
# - MongoDB: mongodb:27017 (poc_mongo_db)
# - Redis: redis:6379
# - MinIO: minio:9000
#
# Management Tools (External Access):
# - pgAdmin: http://localhost:5050 (admin@example.com / admin)
# - Mongo Express: Available via NPM proxy
# - System Monitor: http://localhost:3000
# 
# For external host machine access, use:
# - PostgreSQL: localhost:5432, MongoDB: localhost:27017, etc.
#
# Container-specific environments use:
# - app-dev: .env.dev (development settings)  
# - app-prod: .env.prod (production settings)
#
# All environments now use the same Docker container names for consistency
