# FastAPI Docker Stack - Environment Configuration Template
# Copy this file to .env and update with your actual values

# =============================================================================
# OpenRouter Configuration (Required)
# =============================================================================
# Get your API key from: https://openrouter.ai/keys
OPENROUTER_API_KEY="your_openrouter_api_key_here"
OPENROUTER_BASE_URL="https://openrouter.ai/api/v1"
OPENROUTER_SITE_URL="https://yourdomain.com"
OPENROUTER_APP_NAME="FastAPI-Docker-Stack"

# =============================================================================
# AI Model Configuration
# =============================================================================
# Default model to use for AI generation
# Popular options: deepseek/deepseek-r1, openai/gpt-4, anthropic/claude-3-sonnet
DEFAULT_MODEL="deepseek/deepseek-r1"

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL database settings
POSTGRES_USER="stackuser"
POSTGRES_PASSWORD="change_this_secure_password_123"
POSTGRES_DB="stack_db"

# Database connection URL (used by the application)
# For Docker: use service name 'postgres'
# For external DB: use actual hostname/IP
DATABASE_URL="postgresql://stackuser:change_this_secure_password_123@postgres:5432/stack_db"

# Database connection pool settings
DB_POOL_MIN_SIZE=2
DB_POOL_MAX_SIZE=10
DB_COMMAND_TIMEOUT=60

# =============================================================================
# Redis Configuration
# =============================================================================
# Redis connection settings
REDIS_URL="redis://redis:6379"
REDIS_PASSWORD=""  # Leave empty for no password
REDIS_MAX_CONNECTIONS=10

# =============================================================================
# MinIO Configuration (S3-Compatible Storage)
# =============================================================================
# MinIO server settings
MINIO_ENDPOINT="minio:9000"
MINIO_ACCESS_KEY="minioadmin"
MINIO_SECRET_KEY="change_this_secure_minio_password_123"
MINIO_BUCKET_NAME="stack-bucket"
MINIO_SECURE="false"  # Set to "true" for HTTPS

# =============================================================================
# Application Configuration
# =============================================================================
# Application environment: development, testing, production
APP_ENV="development"

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL="INFO"

# =============================================================================
# Security Configuration
# =============================================================================
# API authentication (optional - for future use)
API_KEY=""

# CORS allowed origins (comma-separated)
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8000"

# Rate limiting settings
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_PERIOD=60  # seconds

# =============================================================================
# Development Settings
# =============================================================================
# Set to "true" to enable development features
DEBUG="false"

# Hot reload for development (FastAPI --reload)
RELOAD="false"

# =============================================================================
# Production Settings (Uncomment for production)
# =============================================================================
# APP_ENV="production"
# DEBUG="false" 
# LOG_LEVEL="WARNING"
# RELOAD="false"

# =============================================================================
# Important Security Notes
# =============================================================================
# 1. Never commit this file with real credentials to version control
# 2. Use strong, unique passwords for all services
# 3. In production, consider using Docker secrets or external secret management
# 4. Regularly rotate passwords and API keys
# 5. Use HTTPS in production (set MINIO_SECURE="true", add SSL certificates)
# 6. Configure firewall rules to limit access to your services
# 7. Enable authentication before production deployment

# =============================================================================
# Quick Start
# =============================================================================
# 1. Copy this file: cp .env.example .env
# 2. Get OpenRouter API key: https://openrouter.ai/keys
# 3. Update OPENROUTER_API_KEY with your actual key
# 4. Change default passwords for POSTGRES_PASSWORD and MINIO_SECRET_KEY
# 5. Update OPENROUTER_SITE_URL to your domain
# 6. Start services: docker-compose up -d
# 7. Test setup: python run_all_tests.py