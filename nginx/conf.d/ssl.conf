# HTTPS Server Configuration for dev.local
# Path-based routing for all services with SSL termination

server {
    listen 80;
    server_name dev.local localhost;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name dev.local localhost;
    
    # SSL Configuration
    ssl_certificate /etc/nginx/certs/dev.local.crt;
    ssl_certificate_key /etc/nginx/certs/dev.local.key;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Hide server version
    server_tokens off;
    
    # Client settings
    client_max_body_size 100M;
    
    # ====================================
    # MAIN ROUTES
    # ====================================
    
    # Root - Heimdall Dashboard
    location / {
        limit_req zone=general burst=50 nodelay;
        proxy_pass http://heimdall;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    
    # ====================================
    # API ROUTES
    # ====================================
    
    # Production API
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        rewrite ^/api/(.*) /$1 break;
        proxy_pass http://app_prod;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # API-specific timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Development API
    location /api-dev/ {
        limit_req zone=api burst=30 nodelay;
        rewrite ^/api-dev/(.*) /$1 break;
        proxy_pass http://app_dev;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    
    # ====================================
    # MANAGEMENT ROUTES
    # ====================================
    
    # Portainer - Docker Management
    location /portainer/ {
        rewrite ^/portainer/(.*) /$1 break;
        proxy_pass https://portainer;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # SSL verification off for self-signed certs
        proxy_ssl_verify off;
    }
    
    # pgAdmin - PostgreSQL Management
    location /pgadmin/ {
        proxy_pass http://pgadmin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Script-Name /pgadmin;
        proxy_redirect off;
    }
    
    # Mongo Express - MongoDB Management
    location /mongo/ {
        rewrite ^/mongo/(.*) /$1 break;
        proxy_pass http://mongo_express;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # Redis Commander - Redis Management
    location /redis/ {
        rewrite ^/redis/(.*) /$1 break;
        proxy_pass http://redis_commander;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # MinIO Console - Object Storage
    location /minio/ {
        rewrite ^/minio/(.*) /$1 break;
        proxy_pass http://minio_console;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # ====================================
    # MONITORING ROUTES
    # ====================================
    
    # System Monitor - Docker Stats
    location /status/ {
        proxy_pass http://system_monitor/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
    
    # ====================================
    # DEVELOPMENT ROUTES
    # ====================================
    
    # VS Code Server - Browser IDE
    location /code/ {
        rewrite ^/code/(.*) /$1 break;
        proxy_pass http://vscode;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
        
        # VS Code specific settings
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # MCP Inspector - Protocol Testing
    location /mcp/ {
        rewrite ^/mcp/(.*) /$1 break;
        proxy_pass http://mcp_inspector;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_bypass $http_upgrade;
    }
    
    # ====================================
    # ERROR HANDLING
    # ====================================
    
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        return 404 '{"error": "Not Found", "status": 404}';
        add_header Content-Type application/json;
    }
    
    location = /50x.html {
        return 500 '{"error": "Internal Server Error", "status": 500}';
        add_header Content-Type application/json;
    }
}